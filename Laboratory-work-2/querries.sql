-- Варинт 6548

-- 1 Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_ВЕДОМОСТИ.ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ОТЧЕСТВО = Александрович.
-- b) Н_ВЕДОМОСТИ.ЧЛВК_ИД > 153285.
-- Вид соединения: LEFT JOIN.
SELECT ЛЮДИ.ФАМИЛИЯ, ВЕДОМОСТИ.ИД
FROM Н_ЛЮДИ AS ЛЮДИ
         LEFT JOIN Н_ВЕДОМОСТИ AS ВЕДОМОСТИ ON (ЛЮДИ.ИД = ВЕДОМОСТИ.ЧЛВК_ИД)
WHERE (ЛЮДИ.ОТЧЕСТВО = 'Александрович' AND ВЕДОМОСТИ.ЧЛВК_ИД > 153285);

-- 2 Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ОБУЧЕНИЯ, Н_УЧЕНИКИ.
-- Вывести атрибуты: Н_ЛЮДИ.ИД, Н_ОБУЧЕНИЯ.ЧЛВК_ИД, Н_УЧЕНИКИ.ИД.
-- Фильтры: (AND)
-- a) Н_ЛЮДИ.ИД < 100865.
-- b) Н_ОБУЧЕНИЯ.ЧЛВК_ИД < 112514.
-- c) Н_УЧЕНИКИ.ГРУППА = 3100.
-- Вид соединения: RIGHT JOIN.
SELECT ЛЮДИ.ИД, ОБУЧЕНИЯ.ЧЛВК_ИД, УЧЕНИКИ.ИД
FROM Н_ЛЮДИ AS ЛЮДИ
         RIGHT JOIN Н_ОБУЧЕНИЯ AS ОБУЧЕНИЯ ON (ЛЮДИ.ИД = ОБУЧЕНИЯ.ЧЛВК_ИД)
         RIGHT JOIN Н_УЧЕНИКИ AS УЧЕНИКИ ON (ОБУЧЕНИЯ.ЧЛВК_ИД = УЧЕНИКИ.ЧЛВК_ИД)
WHERE (ЛЮДИ.ИД < 100865 AND ОБУЧЕНИЯ.ЧЛВК_ИД < 112514 AND УЧЕНИКИ.ГРУППА = '3100');

-- 3 Составить запрос, который ответит на вопрос,
--  есть ли среди студентов ФКТИУ люди без ИНН.
-- надо изменить
SELECT CASE
           WHEN count(*) > 0 THEN 'Да, есть'
           ELSE 'Нет, нету'
           END AS "Студенты ФКТИУ без ИНН"

FROM Н_ЛЮДИ AS ЛЮДИ
         JOIN Н_УЧЕНИКИ AS УЧЕНИКИ ON (ЛЮДИ.ИД = УЧЕНИКИ.ЧЛВК_ИД)
         JOIN Н_ПЛАНЫ AS ПЛАНЫ ON (УЧЕНИКИ.ПЛАН_ИД = ПЛАНЫ.ИД)
         JOIN Н_ОТДЕЛЫ AS ОТДЕЛЫ ON (ПЛАНЫ.ОТД_ИД = ОТДЕЛЫ.ИД)
WHERE (ОТДЕЛЫ.КОРОТКОЕ_ИМЯ = 'КТиУ' AND ЛЮДИ.ИНН IS NULL);

-- 4 Выдать различные имена студентов и число людей с каждой из этих имен,
-- ограничив список именами, встречающимися менее 50 раз на заочной
-- форме обучения. Для реализации использовать соединение таблиц.
SELECT ЛЮДИ.ИМЯ, count(*) AS ЧИСЛО_ЛЮДЕЙ
FROM Н_ЛЮДИ AS ЛЮДИ
         JOIN Н_УЧЕНИКИ AS УЧЕНИКИ ON (ЛЮДИ.ИД = УЧЕНИКИ.ЧЛВК_ИД)
         JOIN Н_ПЛАНЫ AS ПЛАНЫ ON (УЧЕНИКИ.ПЛАН_ИД = ПЛАНЫ.ИД)
         JOIN Н_ФОРМЫ_ОБУЧЕНИЯ AS Ф_ОБУЧЕНИЯ ON (ПЛАНЫ.ФО_ИД = Ф_ОБУЧЕНИЯ.ИД)
WHERE (Ф_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ = 'Очная')
GROUP BY ЛЮДИ.ИМЯ
HAVING count(*) < 50;

--5 Выведите таблицу со средним возрастом студентов во всех группах
-- (Группа, Средний возраст), где средний возраст равен минимальному
-- возрасту в группе 3100.
SELECT УЧЕНИКИ.ГРУППА                      AS "ГРУППА",
       (Select min(extract(YEAR FROM age(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ)) :: INTEGER) AS "СРЕДНИЙ ВОЗРАСТ"
        FROM Н_УЧЕНИКИ
                 JOIN Н_ЛЮДИ ON (Н_ЛЮДИ.ИД = Н_УЧЕНИКИ.ЧЛВК_ИД)
        WHERE (Н_УЧЕНИКИ.ГРУППА = '3100')) AS "СРЕДНИЙ ВОЗРАСТ"
FROM Н_ЛЮДИ AS ЛЮДИ
         JOIN Н_УЧЕНИКИ AS УЧЕНИКИ ON (ЛЮДИ.ИД = УЧЕНИКИ.ЧЛВК_ИД)
GROUP BY (УЧЕНИКИ.ГРУППА);

-- 6 Получить список студентов, зачисленных до первого сентября 2012
-- года на первый курс очной формы обучения.
-- В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер и состояние пункта приказа;
-- Для реализации использовать подзапрос с IN.
SELECT УЧЕНИКИ.ГРУППА     AS "номер группы",
       УЧЕНИКИ.ИД         AS "номер студента",
       ЛЮДИ.ФАМИЛИЯ       AS "фамилия",
       ЛЮДИ.ИМЯ           AS "имя",
       ЛЮДИ.ОТЧЕСТВО      AS "отчество",
       УЧЕНИКИ.П_ПРКОК_ИД AS "номер приказа",
       УЧЕНИКИ.СОСТОЯНИЕ  AS "состояние приказа"
FROM Н_УЧЕНИКИ AS УЧЕНИКИ
         JOIN Н_ЛЮДИ AS ЛЮДИ ON (УЧЕНИКИ.ЧЛВК_ИД = ЛЮДИ.ИД)
WHERE (УЧЕНИКИ.ИД IN (SELECT ИД
                      FROM Н_УЧЕНИКИ AS УЧЕНИКИ
                      WHERE (УЧЕНИКИ.ГРУППА LIKE '%1'
                          AND УЧЕНИКИ.ВИД_ОБУЧ_ИД = 1
                          AND УЧЕНИКИ.НАЧАЛО < '01.09.2012'::date)
));

-- 7 Вывести список студентов, имеющих одинаковые имена, но не совпадающие ид.
SELECT DISTINCT ON (ЧЛВК_ИД) ЧЛВК_ИД,
                             ИД,
                             ПРИЗНАК,
                             СОСТОЯНИЕ,
                             НАЧАЛО,
                             КОНЕЦ,
                             ПЛАН_ИД,
                             ГРУППА,
                             П_ПРКОК_ИД,
                             ВИД_ОБУЧ_ИД,
                             ПРИМЕЧАНИЕ,
                             КТО_СОЗДАЛ,
                             КОГДА_СОЗДАЛ,
                             КТО_ИЗМЕНИЛ,
                             КОГДА_ИЗМЕНИЛ,
                             КОНЕЦ_ПО_ПРИКАЗУ,
                             В_СВЯЗИ_С,
                             ТЕКСТ
FROM Н_УЧЕНИКИ AS УЧЕНИКИ
WHERE (УЧЕНИКИ.ЧЛВК_ИД IN (SELECT Н_ЛЮДИ.ИД
                           FROM Н_ЛЮДИ
                           WHERE (Н_ЛЮДИ.ИМЯ IN (SELECT ЛЮДИ.ИМЯ
                                                 FROM Н_ЛЮДИ AS ЛЮДИ
                                                 GROUP BY (ЛЮДИ.ИМЯ)
                                                 HAVING (count(*) > 2)))));